{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Swagger - Pets Shop",
    "description": "Showing off swagger-ui-express"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": " https://project-be7v6c5s.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoint"
    },
    {
      "name": "Pets",
      "description": "Pets endpoint"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],

        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bade request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",

        "parameters": [],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Logout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },

        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Current User",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/users/current/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update Current User",

        "security": [{ "Bearer": [] }],
        "parameters": [],

        "requestBody": {
          "description": "Update object",
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCurrentUserRequest",
                "type": "object"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bade request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Create Pet",

        "security": [{ "Bearer": [] }],
        "parameters": [],

        "requestBody": {
          "description": "New Pet Object",
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePetRequest",
                "type": "object"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePetResponse"
                }
              }
            }
          },
          "401`": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Pets"],
        "summary": "Get User`s Pets",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersPetsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User`s Name",
            "example": "Test Name "
          },
          "email": {
            "type": "string",
            "description": "User`s Email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User`s Name",
            "example": "Test Name"
          },
          "email": {
            "type": "string",
            "description": "User`s Email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "JWT"
          },
          "firstLogin": {
            "type": "boolean",
            "description": "Is that first user login?"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User`s Email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User`s Name"
              },
              "birthday": {
                "type": "string",
                "description": "User`s Birthday"
              },
              "phone": {
                "type": "string",
                "description": "User`s Phone"
              },
              "city": {
                "type": "string",
                "description": "User`s City"
              },
              "email": {
                "type": "string",
                "description": "User`s Email",
                "format": "email"
              },
              "firstLogin": {
                "type": "boolean",
                "description": "Is that first user login?"
              },
              "avatar": {
                "type": "string",
                "description": "Link to User Avatar"
              }
            }
          }
        }
      },

      "LogoutRequest": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT"
          }
        }
      },

      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User`s Name"
          },
          "birthday": {
            "type": "string",
            "description": "User`s Birthday"
          },
          "phone": {
            "type": "string",
            "description": "User`s Phone"
          },
          "city": {
            "type": "string",
            "description": "User`s City"
          },
          "email": {
            "type": "string",
            "description": "User`s Email",
            "format": "email"
          },
          "firstLogin": {
            "type": "boolean",
            "description": "Is that first user login?"
          },
          "avatar": {
            "type": "string",
            "description": "Link to User Avatar"
          }
        }
      },

      "UpdateCurrentUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User`s Name"
          },
          "email": {
            "type": "string",
            "description": "User`s Email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User`s Birthday"
          },
          "phone": {
            "type": "string",
            "description": "User`s Phone"
          },
          "city": {
            "type": "string",
            "description": "User`s City"
          },
          "avatar": {
            "type": "string",
            "description": "User`s Avatar",
            "format": "binary"
          }
        }
      },
      "UpdateCurrentUserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User`s Name"
              },
              "email": {
                "type": "string",
                "description": "User`s Email",
                "format": "email"
              },
              "birthday": {
                "type": "string",
                "description": "User`s Email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User`s Email",
                "format": "email"
              },
              "city": {
                "type": "string",
                "description": "User`s Email",
                "format": "email"
              },
              "avatar": {
                "type": "string",
                "description": "Link to user avatar"
              }
            }
          }
        }
      },

      "CreatePetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet`s Name"
          },
          "birthday": {
            "type": "string",
            "description": "Pet`s Birthday (ISO-format: 2022-01-01)"
          },
          "type": {
            "type": "string",
            "description": "Pet`s Breed"
          },
          "comments": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "CreatePetResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Pet`s owner ID",
            "example": "Pet`s owner ID"
          },
          "name": {
            "type": "string",
            "description": "Pet`s Name",
            "example": "Pet`s Name"
          },
          "birthday": {
            "type": "string",
            "description": "Pet`s Birthday",
            "example": "Pet`s Birthday"
          },
          "type": {
            "type": "string",
            "description": "Pet`s Breed",
            "example": "Pet`s Breed"
          },
          "photoUrl": {
            "type": "string",
            "description": "Pet`s Image",
            "example": "URL to Pet`s Image"
          },
          "comments": {
            "type": "string",
            "description": "Comment"
          },
          "_id": {
            "type": "string",
            "description": "Pet`s ID",
            "example": "Pet`s ID"
          },
          "createdAt": {
            "type": "string",
            "description": "Pet`s creation date",
            "example": "Pet`s creation date"
          },
          "updatedAt": {
            "type": "string",
            "description": "Pet`s data update date",
            "example": "Pet`s data update date"
          }
        }
      },

      "GetUsersPetsResponse": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "string",
            "description": "Total"
          },
          "page": {
            "type": "string",
            "description": "User`s Birthday"
          },
          "totalPages": {
            "type": "string",
            "description": "User`s Phone"
          },
          "results": {
            "type": "string",
            "description": "User`s City"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
